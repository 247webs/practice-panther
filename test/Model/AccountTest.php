<?php
/**
 * AccountTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache License v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * PracticePanther KISS Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Client;

/**
 * AccountTest Class Doc Comment
 *
 * @category    Class */
// * @description An account is an entity that can represent either one contact, or multiple contacts. An account must contain at least one primary contact
/**
 * @package     Swagger\Client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache License v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class AccountTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "Account"
     */
    public function testAccount()
    {
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
    }

    /**
     * Test attribute "display_name"
     */
    public function testPropertyDisplayName()
    {
    }

    /**
     * Test attribute "number"
     */
    public function testPropertyNumber()
    {
    }

    /**
     * Test attribute "company_name"
     */
    public function testPropertyCompanyName()
    {
    }

    /**
     * Test attribute "address_street_1"
     */
    public function testPropertyAddressStreet1()
    {
    }

    /**
     * Test attribute "address_street_2"
     */
    public function testPropertyAddressStreet2()
    {
    }

    /**
     * Test attribute "address_city"
     */
    public function testPropertyAddressCity()
    {
    }

    /**
     * Test attribute "address_state"
     */
    public function testPropertyAddressState()
    {
    }

    /**
     * Test attribute "address_country"
     */
    public function testPropertyAddressCountry()
    {
    }

    /**
     * Test attribute "address_zip_code"
     */
    public function testPropertyAddressZipCode()
    {
    }

    /**
     * Test attribute "tags"
     */
    public function testPropertyTags()
    {
    }

    /**
     * Test attribute "company_custom_field_values"
     */
    public function testPropertyCompanyCustomFieldValues()
    {
    }

    /**
     * Test attribute "assigned_to_users"
     */
    public function testPropertyAssignedToUsers()
    {
    }

    /**
     * Test attribute "created_at"
     */
    public function testPropertyCreatedAt()
    {
    }

    /**
     * Test attribute "updated_at"
     */
    public function testPropertyUpdatedAt()
    {
    }

    /**
     * Test attribute "notes"
     */
    public function testPropertyNotes()
    {
    }

    /**
     * Test attribute "primary_contact"
     */
    public function testPropertyPrimaryContact()
    {
    }

    /**
     * Test attribute "other_contacts"
     */
    public function testPropertyOtherContacts()
    {
    }
}
